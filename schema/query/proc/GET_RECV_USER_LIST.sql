-- --------------------------------------------------------
-- 호스트:                          eberry.co.kr
-- 서버 버전:                        10.3.11-MariaDB - MariaDB Server
-- 서버 OS:                        Linux
-- HeidiSQL 버전:                  10.2.0.5599
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 프로시저 REDSPUSH.GET_RECV_USER_LIST 구조 내보내기
DELIMITER //
CREATE DEFINER=`redspush`@`%` PROCEDURE `GET_RECV_USER_LIST`(
    IN `P_PROC_ID` VARCHAR(30),
    IN `P_TRANS_NO` VARCHAR(30),
  	IN `P_USR_LIST` TEXT,
    IN `P_START_NO` INT,
    IN `P_PAGE_NO` INT,
    IN `P_READING_YN` VARCHAR(1),
    IN `P_KEY_TYPE` VARCHAR(1),
    IN `P_KEYWORD` VARCHAR(30),
  	OUT `P_RECV_CNT` INT,
    OUT P_RESULT_ID INT,
    OUT P_MESSAGE   TINYTEXT    
)
    COMMENT '[oslee97] 발송이력 수신자 목록 조회.'
BEGIN

    DECLARE SQLSTRING   TEXT;
    DECLARE CNTSTRING   TEXT;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
      BEGIN
        SET P_RESULT_ID	= -1;
        SET P_MESSAGE	= "조회중 오류가 발생하였습니다.";
    END;    
        
    SET SQLSTRING = "";  
    SET CNTSTRING = "";
        
    SET P_RESULT_ID= 0;
    SET P_MESSAGE= "정상적으로 처리되었습니다.";

		SET @EXEC_TRANS_NO  = P_TRANS_NO;
		SET @EXEC_USR_LIST  = P_USR_LIST;
		SET @EXEC_ST  = P_START_NO;
		SET @EXEC_CNT  = P_PAGE_NO;            
    SET @ROWNUM =P_START_NO;
    
    
    SET CNTSTRING = CONCAT(CNTSTRING, "  SELECT COUNT(B.USR_ID) AS CNT \n");
    SET CNTSTRING = CONCAT(CNTSTRING, "    INTO @P_CNT \n");
    SET CNTSTRING = CONCAT(CNTSTRING, "    FROM PM_MSGRECV A \n");
    SET CNTSTRING = CONCAT(CNTSTRING, "    RIGHT OUTER JOIN SN_USR B \n");
    SET CNTSTRING = CONCAT(CNTSTRING, "      ON A.USR_ID = B.USR_ID \n");
    SET CNTSTRING = CONCAT(CNTSTRING, "     AND A.TRNS_NO = ? \n");
    SET CNTSTRING = CONCAT(CNTSTRING, "   WHERE FIND_IN_SET(B.USR_ID, ?) \n");
    IF P_KEY_TYPE = 'A' THEN
    	SET @EXEC_KEY_WORD  = P_KEYWORD;
    	SET CNTSTRING = CONCAT(CNTSTRING, "     AND B.USR_NM LIKE CONCAT('%', @EXEC_KEY_WORD, '%')  \n");
    ELSEIF P_KEY_TYPE = 'B' THEN
    	SET @EXEC_KEY_WORD  = P_KEYWORD;
    	SET CNTSTRING = CONCAT(CNTSTRING, "     AND B.CELL_NO LIKE CONCAT('%', @EXEC_KEY_WORD, '%')  \n");    	
    ELSEIF P_KEY_TYPE = 'C' THEN
    	SET @EXEC_KEY_WORD  = P_KEYWORD;
    	SET CNTSTRING = CONCAT(CNTSTRING, "     AND B.EMAIL_ADDR LIKE CONCAT('%', @EXEC_KEY_WORD, '%')  \n");
    END IF;

		IF P_READING_YN != '' THEN
			SET @EXEC_READING_YN  = P_KEYWORD;
    	SET CNTSTRING = CONCAT(CNTSTRING, "     AND A.READING_YN = @EXEC_READING_YN \n");
    END IF;
    
     
		SET @EXEC_CNT_SQL 	= CNTSTRING;
		PREPARE STMT_CNT FROM  @EXEC_CNT_SQL;		
    EXECUTE STMT_CNT USING @EXEC_TRANS_NO, @EXEC_USR_LIST;
    DEALLOCATE PREPARE STMT_CNT;
    SET P_RECV_CNT = @P_CNT;

    SET SQLSTRING = CONCAT(SQLSTRING, "SELECT @ROWNUM := @ROWNUM+1 RM, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       A.RCVMSG_NO, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(A.RCV_TS, '') AS RCV_TS, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       A.USR_ID, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(B.USR_NM, '') AS USR_NM, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       CASE WHEN IFNULL(B.USR_NCKNM, '') = '' THEN B.USR_NM ELSE B.USR_NCKNM END AS USR_NCKNM, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(B.CELL_NO, '') AS CELL_NO, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(B.EMAIL_ADDR, '') AS EMAIL_ADDR, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(B.AVT_IMG_PATH, '') AS AVT_IMG_PATH, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(A.TRNS_NO, '') AS TRNS_NO, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       (SELECT D.DPT_NM FROM SN_DPT D WHERE D.CPNY_NO = B.CPNY_NO AND D.DPT_NO = B.DPT_NO) AS DPT_NM, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(A.READING_YN, 'N') AS READING_YN, \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "       IFNULL(A.SNDMSG_NO, '') AS SNDMSG_NO \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "  FROM PM_MSGRECV A \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "  RIGHT OUTER JOIN SN_USR B \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "    ON A.USR_ID = B.USR_ID \n");
    SET SQLSTRING = CONCAT(SQLSTRING, "   AND A.TRNS_NO = ? \n");
    SET SQLSTRING = CONCAT(SQLSTRING, " WHERE FIND_IN_SET(B.USR_ID, ?) \n");
       
    IF P_KEY_TYPE = 'A' THEN
    	SET @EXEC_KEY_WORD  = P_KEYWORD;
    	SET SQLSTRING = CONCAT(SQLSTRING, "     AND B.USR_NM LIKE CONCAT('%', @EXEC_KEY_WORD, '%')  \n");
    ELSEIF P_KEY_TYPE = 'B' THEN
    	SET @EXEC_KEY_WORD  = P_KEYWORD;
    	SET SQLSTRING = CONCAT(SQLSTRING, "     AND B.CELL_NO LIKE CONCAT('%', @EXEC_KEY_WORD, '%')  \n");    	
    ELSEIF P_KEY_TYPE = 'C' THEN
    	SET @EXEC_KEY_WORD  = P_KEYWORD;
    	SET SQLSTRING = CONCAT(SQLSTRING, "     AND B.EMAIL_ADDR LIKE CONCAT('%', @EXEC_KEY_WORD, '%')  \n");
    END IF;

		IF P_READING_YN != '' THEN
			SET @EXEC_READING_YN  = P_READING_YN;
    	SET SQLSTRING = CONCAT(SQLSTRING, "     AND A.READING_YN = @EXEC_READING_YN \n");
    END IF;

    SET SQLSTRING = CONCAT(SQLSTRING, "LIMIT ?, ? \n");

		SET @EXEC_SQL 	= SQLSTRING;
		PREPARE STMT FROM  @EXEC_SQL;		
    EXECUTE STMT USING @EXEC_TRANS_NO, @EXEC_USR_LIST, @EXEC_ST, @EXEC_CNT;
		DEALLOCATE PREPARE STMT;
    
 END//
DELIMITER ;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
